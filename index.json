[{"categories":["Coding"],"content":"Cumcmthesis 的入门级使用","date":"2023-08-08","objectID":"/cumcmthesis/","tags":["LaTeX","blog"],"title":"Cumcmthesis | 基于LaTeX的数模写作模板","uri":"/cumcmthesis/"},{"categories":["Coding"],"content":"基本介绍 cumcmthesis 是为全国大学生数学建模竞赛编写的 LaTeX 模板, 旨在让大家专注于论文的内容写作, 而不用花费过多精力在格式的定制和调整上. 作者已经将模板开源在 Github仓库，随取随用。该模板已经帮我们处理好了大部分论文所需要的格式，正如简介所说的，使用此模板后我们现在只要专注文章内容就可以了。 ","date":"2023-08-08","objectID":"/cumcmthesis/:1:0","tags":["LaTeX","blog"],"title":"Cumcmthesis | 基于LaTeX的数模写作模板","uri":"/cumcmthesis/"},{"categories":["Coding"],"content":"使用方法 ","date":"2023-08-08","objectID":"/cumcmthesis/:2:0","tags":["LaTeX","blog"],"title":"Cumcmthesis | 基于LaTeX的数模写作模板","uri":"/cumcmthesis/"},{"categories":["Coding"],"content":"导入 首先我们需要先将 Github仓库 clone 下来，然后将其中的 cumcmthesis.cls 文件复制到我们 $\\LaTeX$ 的工作目录中。然后在 tex 文件开头使用： \\documentclass[withoutpreface, bwprint]{cumcmthesis} 其中，[withoutpreface, bwprint] 的功能是去掉封面与编号页。 ","date":"2023-08-08","objectID":"/cumcmthesis/:2:1","tags":["LaTeX","blog"],"title":"Cumcmthesis | 基于LaTeX的数模写作模板","uri":"/cumcmthesis/"},{"categories":["Coding"],"content":"标题 很简单的一行代码：\\title{} 然后在 document 环境中使用 \\maketitle 即可。 ","date":"2023-08-08","objectID":"/cumcmthesis/:2:2","tags":["LaTeX","blog"],"title":"Cumcmthesis | 基于LaTeX的数模写作模板","uri":"/cumcmthesis/"},{"categories":["Coding"],"content":"摘要 \\begin{abstract} some contents \\keywords{foo_1 \\quad foo_2} \\end{abstract} ","date":"2023-08-08","objectID":"/cumcmthesis/:2:3","tags":["LaTeX","blog"],"title":"Cumcmthesis | 基于LaTeX的数模写作模板","uri":"/cumcmthesis/"},{"categories":["Coding"],"content":"正文 普通文字分章节正常使用 \\section 和 \\subsection 即可。 模板已经自动帮我们设定好了首行的缩进单位。 itemize 与 enumerate 缩进 以 enumerate 为例： \\begin{enumerate}[itemindent=2em] \\item some items \\end{enumerate} 这里的 itemindent=2em 设定为缩进两个字符长度。示例如图： table 表格 不得不说表格是 $\\LaTeX$ 里最麻烦的东西之一，想要画出一份好表格并不是一件容易的事。$\\LaTeX$ 自带的表格并不能很好的实现美观表格，所以需要先导入 tabularx 宏包。 下面给出我的表格代码示例： \\begin{table}[!htbp] \\caption[symbol]{符号说明及表示} \\centering \\begin{tabularx}{\\textwidth}{ \u003e{\\centering\\arraybackslash}X \u003e{\\centering\\arraybackslash}X \u003e{\\centering\\arraybackslash}X} \\toprule[1.5pt] 符号 \u0026 说明 \u0026 单位 \\\\ \\midrule[1pt] \\bottomrule[1.5pt] \\end{tabularx} \\end{table} figure 图片 图片是 $\\LaTeX$ 中的另一个讨人厌的家伙，尤其是涉及多图排版的时候。 下面分别给出我认为比较美观的图片示意代码： 单图排版： \\begin{figure}[H] \\centering \\label{fig: example} \\includegraphics[width=0.7\\textwidth]{src} \\caption{example} \\end{figure} 多图排版（ minipage ）: \\begin{figure}[H] \\begin{minipage}{0.48\\linewidth} \\centering \\label{fig: foo_1} \\includegraphics[width=3.01in]{src} \\caption{foo_1} \\end{minipage} \\hfill \\begin{minipage}{0.48\\linewidth} \\centering \\label{fig: foo_2} \\includegraphics[width=3.01in]{src} \\caption{foo_2} \\end{minipage} \\end{figure} 多图排版示意图： ","date":"2023-08-08","objectID":"/cumcmthesis/:2:4","tags":["LaTeX","blog"],"title":"Cumcmthesis | 基于LaTeX的数模写作模板","uri":"/cumcmthesis/"},{"categories":["Coding"],"content":"参考文献 参考文献的引用方式在 cumcmthesis 中被大大简化了，不需要写 bib 文件，更不需要重复编译四次，只需要一段简短的代码就可以完成： \\begin{thebibliography}{9} \\bibitem{1} some contents \\end{thebibliography} 引用内容也不需要使用特定的 bibtex 格式，用平时 word 中的常见格式就可以。 在文章中要引用的话使用 \\supercite{num} 即可。 ","date":"2023-08-08","objectID":"/cumcmthesis/:2:5","tags":["LaTeX","blog"],"title":"Cumcmthesis | 基于LaTeX的数模写作模板","uri":"/cumcmthesis/"},{"categories":["Coding"],"content":"附录 \\newpage \\begin{appendices} \\section{目录结构} a figure \\section{代码} some code \\lstinputlisting[language=code]{src} \\end{appendices} ","date":"2023-08-08","objectID":"/cumcmthesis/:2:6","tags":["LaTeX","blog"],"title":"Cumcmthesis | 基于LaTeX的数模写作模板","uri":"/cumcmthesis/"},{"categories":["Coding"],"content":"Hugo 短代码入门","date":"2023-08-04","objectID":"/shortcode/","tags":["Hugo","blog"],"title":"Hugo ShortCode | 丰富你的 Markdown","uri":"/shortcode/"},{"categories":["Coding"],"content":"Hugo ShortCode Hugo loves Markdown because of its simple content format, but there are times when Markdown falls short. Often, content authors are forced to add raw HTML (e.g., video \u003ciframe\u003e’s) to Markdown content. We think this contradicts the beautiful simplicity of Markdown’s syntax. 由 Hugo 官方文档中我们可以得知，为了在丰富 Markdown 文本的同时仍然保持其简约性，Hugo 创造了短代码对繁缛的 Html 进行替代。我们可以简单的将其理解为 Markdown 的一种插件，一种拓展语法，一个 template，它的出现为文本增添了许多新功能。 ","date":"2023-08-04","objectID":"/shortcode/:1:0","tags":["Hugo","blog"],"title":"Hugo ShortCode | 丰富你的 Markdown","uri":"/shortcode/"},{"categories":["Coding"],"content":"使用方法 短代码的常见格式为 {{% shortcode parameter %}} 或 {{\u003c shortcode parameter \u003e}} shortcode 为我们所定义的方法，具体代码需要写在 /layouts/shortcodes 文件夹中新建的同名 html 文件里；parameter 则类似 css 中的标签，可以方便我们定位 % 所包裹的代码内容会被 markdown 引擎渲染解析后再传入，而 \u003c\u003e 的代码内容不会被渲染 我们可以将其理解为 {{\u003c shortcode \u003e}} 的实质是将同名 shortcode.html 文件内容复制到 markdown 中并执行 和 Html 一样，shortcode 也有opening 和 closing 两种方式： opening: {{% shortcode %}} closing: {{% shortcode %}} A bunch of code here {{% /shortcode %}} 如果参数过长，则可以考虑用以下形式传递： {{\u003c myshortcode `This is some \u003cb\u003eHTML\u003c/b\u003e, and a new line with a \"quoted string\".` \u003e}} 下面是一个官方提供的 youtube 教程 ","date":"2023-08-04","objectID":"/shortcode/:1:1","tags":["Hugo","blog"],"title":"Hugo ShortCode | 丰富你的 Markdown","uri":"/shortcode/"},{"categories":["Coding"],"content":"简单语法 {{ .Inner }} 获取 closing shortcode 中被包裹的所有内容 {{ .Get 'foo' }} 获取参数名为 foo 的参数，注意其中 foo 两侧应该为反引号 {{ index .Params 0 }} 获取 shortcode 中的第一个参数（和 c 语言中的数组一样，以 0 为起始位） 下面以一个具体例子进行说明： 先创建 /layouts/shortcodes/abbr.html 接下来在博客的 markdown 中写入： {{\u003c abbr title=\"Yahooooooooooooooooooooooooo~\" text=\"Yaho~\" \u003e}} 现在我们便可以在之前所创建的 abbr.html 中进行编辑了，比如使用如下代码： \u003cabbr title=\"{{ .Get `title` }}\"\u003e {{ .Get `text` }} \u003c/abbr\u003e 如此一来在 ./assets/css/_custom.scss 这个自定义 css 文件中（如果你使用的也是 LoveIt 主题的话）我们就可以用 css 对刚才的代码块进行修饰，从而减轻我们在 markdown 中的书写负担（markdown 中只要写 shortcode 就行了，并且这种方法类似函数调用，复用性很高） 例子在这（把鼠标放过来看看吧~）：\rYaho~\r从官方文档我们可以发现，短代码能做的不只这些，它们组合起来可以进行很复杂的操作，条件判断，循环语句都有对应的短代码，它就像一款新的编程语言，只不过是针对博客上的元素进行操作。 并且，Hugo 官方已经帮我们实现好了不少 shortcode ，即取即用，它们被统称为 Custom shortcode，在官网可以进行查看。 另外，在 LoveIt 主题中，诸如 bilibili , music 这些短代码也已经帮我们实现好了，具体可以在 /theme/layouts/shortcodes 里查看。 网上也有不少大佬对短代码进行了整理，现在也贴在下面以供读者查看： 山茶化舍的博客 书藏的博客 ","date":"2023-08-04","objectID":"/shortcode/:1:2","tags":["Hugo","blog"],"title":"Hugo ShortCode | 丰富你的 Markdown","uri":"/shortcode/"},{"categories":["Coding"],"content":"一些插曲 在写这篇博客时，我发现无论如何 {{\u003c shortcode \u003e}} 中的短代码都会比 markdown 语法更快渲染出来，导致网页因为无法识别未定义的 shortcode 而崩溃。为此我在 Google 上查了一个多小时，没有发现任何一篇中文博客提到了这点特性。最终在我将要放弃的时候居然在 Hugo官方的Help界面 发现了问题的答案。只需写成 {{\u003c /*shortcode*/ \u003e}} 就能正常让 shortcode stop rendering 从而被正常渲染。此外，不包含 \u003c\u003e 或 % 的短代码如果加上 /* */ 反而是画蛇添足，正常书写即可。 与此同时，我在不经意间发现了 风月大佬写的将近 5 万字 Hugo 博客详解 , 让我受益匪浅，也大受震撼。 当下的互联网，太多人只是单纯从别人手中照抄照搬，这在中文互联网更是屡见不鲜。 别人的项目，稍微修改一下名字就当作自己的内容发布，这种低质量的水文遍地都是。 高质量的长篇博文却无人问津，甚至连被抄袭的可能性都失去，实在荒唐。 满地六便士，我幻想成为月亮。\r","date":"2023-08-04","objectID":"/shortcode/:1:3","tags":["Hugo","blog"],"title":"Hugo ShortCode | 丰富你的 Markdown","uri":"/shortcode/"},{"categories":["Random thoughts"],"content":"我的第一篇博客","date":"2023-08-02","objectID":"/helloworld/","tags":["blog","About me"],"title":"Hello World","uri":"/helloworld/"},{"categories":["Random thoughts"],"content":"你好，世界 个人博客让我不自觉地回忆起高中时期购买的日程本，同样的 TODO 待办，同样的个人随想， 同样的创作欲望 $\\ldots$ 只不过这次工具不再是纸和笔，读者也不再是我自己。且将新火试新茶，世界，你好！ ","date":"2023-08-02","objectID":"/helloworld/:1:0","tags":["blog","About me"],"title":"Hello World","uri":"/helloworld/"},{"categories":["Random thoughts"],"content":"大一学习生活总结 2022.8.23 大学生活的第一天，fresh and excited. 初入编程，这一段时间正在学习py， 现在回想起来只能为那段因错误学习路线而白白浪费的光阴叹息 2022.9.17 社团招新，见到了可爱的 fufu 😊 2022.9.21 初见Linux，在 chenx 大佬的帮助下安装WSL，第一次因为安装时滚动的命令行而兴奋，觉得这是一件非常 geek 的事 2022.9.23 第一次接触单片机，从学校社团里嫖到的 STM32F103C8T6 ，第一次烧录程序。虽然后来因为知识水平不够而退出，但是作为首次接触嵌入式开发，也足够了 2022.9.27 在大佬帮助下安装了 manjaro 双系统，从而在真正意义上接触到了命令行操作，第一次通过 Google 自行解决了 wifi 驱动问题，非常自豪🥰 2022.9.28 参加学校某知名地下组织举办的 Linux101 系列讲座（现已转正 2022.10.13 心理情景剧上映！（剧本很多都是我写的😋，虽然结果不如意但过程很开心 2022.11.1 第一次在实验室接线，用示波器调试 2022.11.2 Switch到货，好玩儿~~🤗 2022.11.13 校园音乐会（当然是坐在观众席 2022.12.4 powershell 美化，b 格瞬间就高起来了（ 2022.12.8 第一次接触 ChatGPT ，给我的第一感受就是震撼（当时还让 Chat 扮演猫娘来着，可惜后来被万恶的 openAI 取缔了😠） 2022.12.14 放开前夕离校，大一上校园生活结束 2022.12.15 HTML 初见，但是学习路线还是歪的 2022.12.21 生日当天阳了，发烧到 38 度😥 2023.1.18 再次学习 python ，写了几个小程序，第一次做开发 2023.1.30 第一次刷机，Redmi 8A ，twrp 刷成功了但是可能因为版本原因导致无法 root ，也就无法刷 ROM ，这点困扰了我挺久的 2023.2.6 返校，准备期末 2023.2.12 本来快要放弃了，哪成想在室友帮助下改了 A/B 分区后就刷成功了，用的 PE 系统，年轻人的第一个类原生系统，类原生赛高！ 2023.2.17 利用手机的 tumx 实现在手机上便乘，挺有趣的hh 2023.2.24 经过不竭努力下我们组的小车终于跑起来了！（Arduino + IR2104驱动） 2023.2.28 期末考破防，绩点大跌😭 2023.3.11 为了完成实验考核而自行用 SW 设计了一个机械臂（但是十分粗糙，实体估计装都装不上，不过还是挺有成就感的 2023.3.12 学校社团游园会，逛了一晚上，这应该是疫情后的第一次大型活动 2023.3.19 小车考核结束，再见了所有的自动化小车战士 2023.3.21 海鲜市场低价收了一台 ThinkPad X260 ，装了 Ubuntu 22.04（然后就放一边吃灰了 2023.3.24 第一次救砖成功！🎉 然后因为好奇刷了 Ubuntu Touch，事实证明这个系统纯纯fw 2023.4.4 大佬室友 chenx 自建了一个 MC 服务器，全宿舍联机速通了原版 MC 2023.4.28 HK 暴走一晚上，啥都没看到，腿快废了，第二天早上撑不住了搭第一班车赶回（难绷 2023.5.3 参加余中 Graduate101 项目，用 Markdown 写了一份就读指南（然而并没有骗到学弟学妹 2023.5.28 最后两星期完成了体育作业要求的 42 Km 里程 2023.6.23 期末考再次因高数破防，高数一生之敌😭 2023.6.28 学习 Qt6 项目开发 2023.7.7 学习 $\\LaTeX$ 进行论文写作 2023.8.1 开设个人博客 总的来说，在过去的一学年里我接触到了不少新知识、新技术，但是学习进度并不令人满意，而且在这期间走了不少弯路，踩了不少坑，耗费了不少青春年华。我开设这个博客的目的之一也是为了记录我在摸黑过程中踩过的坑，希望能够为后来者给予帮助。 ","date":"2023-08-02","objectID":"/helloworld/:2:0","tags":["blog","About me"],"title":"Hello World","uri":"/helloworld/"},{"categories":["Random thoughts"],"content":"8 月展望 TODO 事项： 完成 MDN 的 html 和 css 教程 争取每周更新 2–3 节数模笔记 优化博客细节 感谢你看到这里，我会继续努力！ ","date":"2023-08-02","objectID":"/helloworld/:3:0","tags":["blog","About me"],"title":"Hello World","uri":"/helloworld/"},{"categories":[],"content":"一份简短的自我介绍","date":"2023-08-02","objectID":"/about/","tags":[],"title":"About Me","uri":"/about/"},{"categories":[],"content":"\r一份简短的自我介绍 你好，我是 longlin ，在校大二新生一枚。 平时喜欢看看电影、追追番剧、打打游戏，但是又经常因为虚度光阴而遭到自己内心的谴责，所以现在正处于一种半躺状态。 啥都想学，但啥都不会。现阶段正在学习 pyside6 与 Qt6 ，打算学习前端基础知识。 ","date":"2023-08-02","objectID":"/about/:0:0","tags":[],"title":"About Me","uri":"/about/"},{"categories":[],"content":"关于这个 blog 本博客诞生于 2023.8.1 ，目的是为了记录自己在日常生活中的所见所感，整理一些学习笔记， 为将来留下一些记忆碎片。本人文学功底不足，文笔欠佳的地方还请见谅。 下面介绍一下博客的大体内容（后期将进行修改）： 所有文章：按时间编排整理博客内容 标签：整理已经发布文章的所有内容标签 分类：将已发布文章按内容进行分类 本博客基于 Hugo 框架进行搭建，使用 Loveit 主题进行装饰。 ","date":"2023-08-02","objectID":"/about/:1:0","tags":[],"title":"About Me","uri":"/about/"},{"categories":[],"content":"关于我自己的兴趣爱好随想 喜欢番剧，拒绝一切牛头人及其相关事物😠，目前在看： The 异世界轻改 咒术回战 伪恋： 不想内卷，但是又经常为绩点焦虑😣 P社战犯，但是除 EU4 和 Vic3 以外都是云玩家😋 任天堂玩家，平时玩玩马车8（找不到人一起玩😭 b站重度依赖症患者，白嫖怪，非酋 最喜欢的东西：假期 最讨厌的东西：ddl 夜猫子 $\\ldots$ 本页面会不定期进行更新，欢迎再次来访。 update time 2023.8 ","date":"2023-08-02","objectID":"/about/:2:0","tags":[],"title":"About Me","uri":"/about/"}]